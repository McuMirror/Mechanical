/*!
\page projects Nucleo Projects
\tableofcontents


This page contains a list of projects and describes their function.
	
## Flat-Sat ACS Flight Software
<table border="0">
<tr>
	<td><b>Project Name</b></td>
	<td>ACS_FlatSat</td>
</tr>
<tr>
	<td><b>Description</b></td>
	<td>The ACS program used on the flat-sat. Includes the full ACS state machine, attitude determination, feedback control logic, 42 integration, SPI FRAM integration, and actuator code to drive the reaction wheel and torque rod prototypes.</td>
</tr>
<tr>
	<td><b>Microcontroller</b></td>
	<td>STM32 Nucleo L152RE</td>
</tr>
<tr>
	<td><b>Usage</b></td>
	<td>Load onto the flat-sat ACS microcontroller. Runs alongside 42. See [**42 Simulation**](simulation42.html).</td>
</tr>
</table>

## ACS Test Project with 42 Integration
<table border="0">
<tr>
	<td><b>Project Name</b></td>
	<td>ACS_42Only</td>
</tr>
<tr>
	<td><b>Description</b></td>
	<td>The full ACS program with 42 integration, but without FRAM integration or actuators enabled.</td>
</tr>
<tr>
	<td><b>Microcontroller</b></td>
	<td>STM32 Nucleo F103RB</td>
</tr>
<tr>
	<td><b>Usage</b></td>
	<td>Runs alongside 42. See [**42 Simulation**](simulation42.html).</td>
</tr>
</table>

## 42 Communication Test Project
<table border="0">
<tr>
	<td><b>Project Name</b></td>
	<td>42_Test</td>
</tr>
<tr>
	<td><b>Description</b></td>
	<td>Tests sending and receiving data from 42.</td>
</tr>
<tr>
	<td><b>Microcontroller</b></td>
	<td>STM32 Nucleo F103RB</td>
</tr>
<tr>
	<td><b>Usage</b></td>
	<td>Runs alongside 42. See [**42 Simulation**](simulation42.html).</td>
</tr>
</table>

## Attitude Determination Test Project
<table border="0">
<tr>
	<td><b>Project Name</b></td>
	<td>Attitude_Estimation</td>
</tr>
<tr>
	<td><b>Description</b></td>
	<td>Run attitude determination using the sensors in the sensor test fixture. Outputs attitude estimates over UART.</td>
</tr>
<tr>
	<td><b>Microcontroller</b></td>
	<td>STM32 Nucleo F103RB</td>
</tr>
<tr>
	<td><b>Usage</b></td>
	<td>Can be operated on its own or integrated with Matlab. See [**Attitude Determination Testing**](attitude_determination.html).</td>
</tr>
</table>

## Attitude Estimation Unit Tests
<table border="0">
<tr>
	<td><b>Project Name</b></td>
	<td>Attitude_Estimation_Test</td>
</tr>
<tr>
	<td><b>Description</b></td>
	<td>Runs the attitude estimation algorithm with set inputs. Prints outputs over UART. Values should be compared to outputs of the Matlab version of the algorithm ([**link**](https://drive.google.com/drive/u/0/folders/1cS4aXuDVg1A6fAaxrRrWnSXZEt2Q4G4o)).</td>
</tr>
<tr>
	<td><b>Microcontroller</b></td>
	<td>STM32 Nucleo F103RB</td>
</tr>
<tr>
	<td><b>Usage</b></td>
	<td>Run and read output from a terminal.</td>
</tr>
</table>

## Reaction Wheel Prototype Demo
<table border="0">
<tr>
	<td><b>Project Name</b></td>
	<td>RW_Demo</td>
</tr>
<tr>
	<td><b>Description</b></td>
	<td>Reads PWM values from either a command line or Matlab. Also measures and transmits motor speed.</td>
</tr>
<tr>
	<td><b>Microcontroller</b></td>
	<td>STM32 Nucleo F103RB</td>
</tr>
<tr>
	<td><b>Usage</b></td>
	<td>See [**Reaction Wheel Testing**](reaction_wheels.html) for instructions on using the associated Matlab scripts.</td>
</tr>
</table>

## Reaction Wheel Prototype Test
<table border="0">
<tr>
	<td><b>Project Name</b></td>
	<td>RW_Test</td>
</tr>
<tr>
	<td><b>Description</b></td>
	<td>Reads input from the command line and sets the PWM of the reaction wheel. This project is deprecated. Use **RW_Demo** instead.</td>
</tr>
<tr>
	<td><b>Microcontroller</b></td>
	<td>STM32 Nucleo L152RE</td>
</tr>
<tr>
	<td><b>Usage</b></td>
	<td>Connect to the microcontroller using a terminal (115200 baud).</td>
</tr>
</table>


## Solar Vector Test
<table border="0">
<tr>
	<td><b>Project Name</b></td>
	<td>SolarVector_Test</td>
</tr>
<tr>
	<td><b>Description</b></td>
	<td>Reads solar vectors from the sensor test fixture and prints results over serial.</td>
</tr>
<tr>
	<td><b>Microcontroller</b></td>
	<td>STM32 Nucleo F103RB</td>
</tr>
<tr>
	<td><b>Usage</b></td>
	<td>See [**Attitude Determination Testing**](attitude_determination.html) for hardware setup instructions. Change lines 40-43 in main.c as desired. Results can be read from a terminal (115200 baud).</td>
</tr>
</table>


## Unit Tests
<table border="0">
<tr>
	<td><b>Project Name</b></td>
	<td>Unit_Tests</td>
</tr>
<tr>
	<td><b>Description</b></td>
	<td>This project contains a series of unit tests for various functions used in the ACS. Results are printed to a terminal.</td>
</tr>
<tr>
	<td><b>Microcontroller</b></td>
	<td>STM32 Nucleo F103RB</td>
</tr>
<tr>
	<td><b>Usage</b></td>
	<td>Connect to the microcontroller using a terminal (115200 baud). Reference results of feedback control unit tests against **ACSMatlabSim/UnitTests.m.**</td>
</tr>
</table>


## BNO055 Testing & Data Collection
<table border="0">
<tr>
	<td><b>Project Name</b></td>
	<td>IMU_Test</td>
</tr>
<tr>
	<td><b>Description</b></td>
	<td>Can be used to run the built-in calibration routines in the BNO055 and to collect data from the IMU's individual sensors. Used primarily for manual sensor calibration.</td>
</tr>
<tr>
	<td><b>Microcontroller</b></td>
	<td>STM32 Nucleo F103RB</td>
</tr>
<tr>
	<td><b>Usage</b></td>
	<td>Change lines 61-62 in main.c as required. Program the microcontroller in the [**sensor test fixture**](attitude_determination.html) and connect to it using a terminal (115200 baud). For manual IMU calibration use the Matlab scripts found [**here**](https://drive.google.com/drive/u/0/folders/1sT_IBypwn3VAgB7iWK8SuhoOCGHZ3cda).</td>
</tr>
</table>


## Automated BNO055 IMU Calibration
<table border="0">
<tr>
	<td><b>Project Name</b></td>
	<td>IMU_Calibration</td>
</tr>
<tr>
	<td><b>Description</b></td>
	<td>This project was a largely unsuccessful attempt to automate the IMU calibration process. Use **IMU_Test** to manually calibrate the IMU instead.</td>
</tr>
<tr>
	<td><b>Microcontroller</b></td>
	<td>STM32 Nucleo F103RB</td>
</tr>
<tr>
	<td><b>Usage</b></td>
	<td>Program the microcontroller in the [**sensor test fixture**](attitude_determination.html). Connect to the microcontroller using a terminal (115200 baud).</td>
</tr>
</table>


*/